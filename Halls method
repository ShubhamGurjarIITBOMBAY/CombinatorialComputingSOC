#by halls method we will check that in the bipartite graph whether the subsets have more noumber of neighbourhoods or not

class graph:
    def __init__(self):
        self.graph={}
    def addvertex(self,vertex):
        if vertex not in self.graph:
            self.graph[vertex]=[]
            return
        return
    def addedge(self,vertex1,vertex2):
        self.graph[vertex1].append(vertex2)
        return
    

def subset(i,graph,sol,main):
    if i==graph.size():
        if sol.size()==neighbour:
            return
        else:
            return False
    sol.append(graph[i])
    neighbour=neighbour+graph[i].size()
    subset(i+1,graph,sol,main)
    graph.pop()
    subset(i+1,graph,sol,main)
